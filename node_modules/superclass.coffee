moduleKeywords = ['included', 'extended']

class SuperClass
    @include: (obj) ->
        throw('include(obj) requires obj') unless obj
        for key, value of obj.prototype when key not in moduleKeywords
            @::[key] = value

        included = obj.included
        included.apply(this) if included
        @

SuperClass.inherit = (obj, methods, otherObj) ->
  methods.forEach (method) ->
    obj[method] = otherObj[method].bind(otherObj)

module.exports = SuperClass
